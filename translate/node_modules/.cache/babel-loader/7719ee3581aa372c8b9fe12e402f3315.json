{"ast":null,"code":"var _jsxFileName = \"/Users/rominalodolo/Desktop/GitHub/REACT/modernreactwithredux/translate/src/components/languages.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LANGUAGES = [{\n  label: \"Afrikaans\",\n  value: \"af\"\n}, {\n  label: \"Arabic\",\n  value: \"ar\"\n}, {\n  label: \"French\",\n  value: \"fr\"\n}, {\n  label: \"Hindi\",\n  value: \"hi\"\n}, {\n  label: \"Japanese\",\n  value: \"ja\"\n}, {\n  label: \"Portuguese\",\n  value: \"pt\"\n}, {\n  label: \"Russian\",\n  value: \"ru\"\n}, {\n  label: \"Simplified Chinese\",\n  value: \"zh-CN\"\n}, {\n  label: \"Spanish\",\n  value: \"es\"\n}, {\n  label: \"Swahili\",\n  value: \"sw\"\n}, {\n  label: \"Thai\",\n  value: \"th\"\n}];\n\nconst Languages = _ref => {\n  _s();\n\n  let {\n    language,\n    onLanguageChange\n  } = _ref;\n\n  if (language === undefined) {\n    language = \"es\";\n  }\n\n  const languageConfig = LANGUAGES.find(l => l.value === language);\n\n  if (!languageConfig) {\n    throw new Error(`Unknown language code '${language}'`);\n  }\n\n  const [open, setOpen] = useState(false);\n\n  const onSelect = language => {\n    setOpen(false);\n    onLanguageChange(language);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label\",\n      children: \"Select Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dropdown ${open && \"is-active\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-trigger\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => setOpen(!open),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: languageConfig.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon is-small\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-angle-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: LANGUAGES.map(_ref2 => {\n            let {\n              label,\n              value\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: () => onSelect(value),\n              className: \"dropdown-item\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Languages, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = Languages;\nexport default Languages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Languages\");","map":{"version":3,"sources":["/Users/rominalodolo/Desktop/GitHub/REACT/modernreactwithredux/translate/src/components/languages.js"],"names":["React","useState","LANGUAGES","label","value","Languages","language","onLanguageChange","undefined","languageConfig","find","l","Error","open","setOpen","onSelect","map"],"mappings":"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","sourcesContent":["/* eslint-disable */\n\nimport React, { useState } from \"react\";\n\nconst LANGUAGES = [\n  { label: \"Afrikaans\", value: \"af\" },\n  { label: \"Arabic\", value: \"ar\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"Hindi\", value: \"hi\" },\n  { label: \"Japanese\", value: \"ja\" },\n  { label: \"Portuguese\", value: \"pt\" },\n  { label: \"Russian\", value: \"ru\" },\n  { label: \"Simplified Chinese\", value: \"zh-CN\" },\n  { label: \"Spanish\", value: \"es\" },\n  { label: \"Swahili\", value: \"sw\" },\n  { label: \"Thai\", value: \"th\" },\n];\n\nconst Languages = ({ language, onLanguageChange }) => {\n  if (language === undefined) {\n    language = \"es\";\n  }\n  const languageConfig = LANGUAGES.find((l) => l.value === language);\n  if (!languageConfig) {\n    throw new Error(`Unknown language code '${language}'`);\n  }\n\n  const [open, setOpen] = useState(false);\n\n  const onSelect = (language) => {\n    setOpen(false);\n    onLanguageChange(language);\n  };\n\n  return (\n    <div>\n      <label className=\"label\">Select Language</label>\n      <div className={`dropdown ${open && \"is-active\"}`}>\n        <div className=\"dropdown-trigger\">\n          <button className=\"button\" onClick={() => setOpen(!open)}>\n            <span>{languageConfig.label}</span>\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-angle-down\" />\n            </span>\n          </button>\n        </div>\n        <div className=\"dropdown-menu\">\n          <div className=\"dropdown-content\">\n            {LANGUAGES.map(({ label, value }) => {\n              return (\n                <a\n                  href=\"#\"\n                  onClick={() => onSelect(value)}\n                  className=\"dropdown-item\"\n                >\n                  {label}\n                </a>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Languages;\n"]},"metadata":{},"sourceType":"module"}